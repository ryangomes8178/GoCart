{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"background\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport var CardSideEnum = {\n  FRONT: 'FRONT',\n  BACK: 'BACK'\n};\n\nvar CardSide = function CardSide(_ref) {\n  var children = _ref.children,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? [] : _ref$style,\n      _ref$background = _ref.background,\n      background = _ref$background === void 0 ? '#612F74' : _ref$background,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var SideBackground = React.useCallback(function (_ref2) {\n    var child = _ref2.children;\n    return typeof background === 'string' ? React.createElement(View, {\n      style: {\n        borderRadius: 9,\n        backgroundColor: background\n      }\n    }, child) : React.cloneElement(background, {\n      children: child\n    });\n  }, [background]);\n  return React.createElement(Animated.View, _extends({\n    style: [styles.sideWrapper].concat(_toConsumableArray(style))\n  }, props), React.createElement(SideBackground, null, React.createElement(View, {\n    style: styles.container\n  }, children)));\n};\n\nvar styles = StyleSheet.create({\n  sideWrapper: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 9\n  },\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: 16\n  }\n});\nexport default CardSide;","map":{"version":3,"sources":["CardSide.tsx"],"names":["CardSideEnum","FRONT","BACK","CardSide","style","background","props","SideBackground","children","child","borderRadius","backgroundColor","styles","container","sideWrapper","width","height","position","padding"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;;;AAGA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EADqB,OAAA;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;;AAKP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAKN;AAAA,MALO,QAKP,QALO,QAKP;AAAA,wBAHTC,KAGS;AAAA,MAHTA,KAGS,2BALO,EAKP;AAAA,6BAFTC,UAES;AAAA,MAFTA,UAES,gCALO,SAKP;AAAA,MADNC,KACM;;AACT,MAAMC,cAAc,GAAG,KAAK,CAAL,WAAA,CACrB,iBAAyB;AAAA,QAAZE,KAAY,SAAtBD,QAAsB;AACvB,WAAO,OAAA,UAAA,KAAA,QAAA,GACL,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,YAAY,EAAd,CAAA;AAAmBC,QAAAA,eAAe,EAAEN;AAApC;AAAb,KAAA,EADK,KACL,CADK,GAKL,KAAK,CAAL,YAAA,CAAA,UAAA,EAA+B;AAAEG,MAAAA,QAAQ,EAAEC;AAAZ,KAA/B,CALF;AAFmB,GAAA,EAUrB,CAVF,UAUE,CAVqB,CAAvB;AAaA,SACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA,QAAA,CAAA;AAAe,IAAA,KAAK,GAAGG,MAAM,CAAP,WAAF,4BAAE,KAAF;AAApB,GAAA,EAAA,KAAA,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEA,MAAM,CAACC;AAApB,GAAA,EAHN,QAGM,CADF,CADF,CADF;AAnBF,CAAA;;AA4BA,IAAMD,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BE,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EADM,MAAA;AAEXC,IAAAA,MAAM,EAFK,MAAA;AAGXC,IAAAA,QAAQ,EAHG,UAAA;AAIXN,IAAAA,eAAe,EAJJ,SAAA;AAKXD,IAAAA,YAAY,EAAE;AALH,GADkB;AAQ/BG,EAAAA,SAAS,EAAE;AACTI,IAAAA,QAAQ,EADC,UAAA;AAETF,IAAAA,KAAK,EAFI,MAAA;AAGTC,IAAAA,MAAM,EAHG,MAAA;AAITE,IAAAA,OAAO,EAAE;AAJA;AARoB,CAAlB,CAAf;AAgBA,eAAA,QAAA","sourcesContent":["import React from 'react';\nimport { View, Animated, StyleSheet } from 'react-native';\n\nexport const CardSideEnum = {\n  FRONT: 'FRONT',\n  BACK: 'BACK',\n};\n\nconst CardSide = ({\n  children,\n  style = [],\n  background = '#612F74',\n  ...props\n}: any) => {\n  const SideBackground = React.useCallback(\n    ({ children: child }) => {\n      return typeof background === 'string' ? (\n        <View style={{ borderRadius: 9, backgroundColor: background }}>\n          {child}\n        </View>\n      ) : (\n        React.cloneElement(background, { children: child })\n      );\n    },\n    [background]\n  );\n\n  return (\n    <Animated.View style={[styles.sideWrapper, ...style]} {...props}>\n      <SideBackground>\n        <View style={styles.container}>{children}</View>\n      </SideBackground>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sideWrapper: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 9,\n  },\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: 16,\n  },\n});\n\nexport default CardSide;\n"]},"metadata":{},"sourceType":"module"}