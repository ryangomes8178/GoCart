{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/raj/Desktop/skrt/src/pages/BarcodeView.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Device from 'expo-device';\nimport LottieView from 'lottie-react-native';\nexport var BarcodeView = function BarcodeView(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var priceHashMap = new Map([['047400672130', '$8.29']]);\n  var nameHashMap = new Map([['047400672130', 'Gillette Sensor3 Disposable Razor']]);\n  var productHashMap = new Map([['047400672130', {\n    \"name\": \"Gillette Sensor3 Dispozable Razor\",\n    \"price\": \"8.29\"\n  }], ['819039021098', {\n    \"name\": \"Tile Mate + Slim (2020) 4-pack (2 Mates, 2 Slims)\",\n    \"price\": \"49.99\"\n  }], ['049022517431', {\n    \"name\": \"Nice! Spring Water - 1L\",\n    \"price\": \"3.99\"\n  }], ['876063006521', {\n    \"name\": \"Muscle Milk Chocolate Protein Shake\",\n    \"price\": \"3.29\"\n  }], ['07199840', {\n    \"name\": \"Coors Light - 12 fl oz\",\n    \"price\": \"1.00\"\n  }], ['096619321063', {\n    \"name\": \"Kirkland Extra Fancy Mixed Nuts - 40 oz\",\n    \"price\": \"8.40\"\n  }], ['073854008089', {\n    \"name\": \"Bicycle Standard Playing Cards - 2pk\",\n    \"price\": \"7.99\"\n  }]]);\n\n  var storeData = function storeData(key, value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            value.quantity = 1;\n            jsonValue = JSON.stringify(value);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, jsonValue));\n\n          case 5:\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert('Something went wrong saving your cart, please try again!');\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var getData = function getData(key) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 3:\n            jsonValue = _context3.sent;\n            console.log(jsonValue != null ? JSON.parse(jsonValue) : null);\n            return _context3.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            alert('Something went wrong reading your cart, please restart the app !');\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    setScanned(true);\n    setTimeout(function () {\n      setScanned(false);\n    }, 5000);\n    var barcode = data.toString();\n\n    if (Device.brand == \"Apple\") {\n      barcode = barcode.substr(1);\n    }\n\n    if (productHashMap.has(barcode)) {\n      alert(productHashMap.get(barcode).name + \" has been scanned and has a price of \" + productHashMap.get(barcode).price + \"!\");\n      storeData(barcode, productHashMap.get(barcode));\n      getData(barcode);\n    } else {\n      alert('The item\\'s barcode (' + barcode + ') did not match any products in our system.');\n    }\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: StyleSheet.absoluteFillObject,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(LottieView, {\n    style: styles.scan,\n    source: require(\"../../assets/16589-qrcode-scanner.json\"),\n    autoPlay: true,\n    loop: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  scan: {},\n  container: {\n    flex: 1\n  },\n  toptext: {\n    alignItems: \"center\",\n    top: 30\n  }\n});","map":{"version":3,"sources":["/Users/raj/Desktop/skrt/src/pages/BarcodeView.js"],"names":["React","useState","useEffect","BarCodeScanner","AsyncStorage","Device","LottieView","BarcodeView","navigation","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","priceHashMap","Map","nameHashMap","productHashMap","storeData","key","value","quantity","jsonValue","JSON","stringify","setItem","alert","getData","getItem","console","log","parse","handleBarCodeScanned","type","data","setTimeout","barcode","toString","brand","substr","has","get","name","price","styles","container","undefined","StyleSheet","absoluteFillObject","justifyContent","alignItems","zIndex","scan","require","create","flex","toptext","top"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Device from 'expo-device'\nimport LottieView from 'lottie-react-native';\n\nexport const BarcodeView = ({navigation}) => {\n    const [hasPermission, setHasPermission] = useState(null);\n    const [scanned, setScanned] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            const { status } = await BarCodeScanner.requestPermissionsAsync();\n            setHasPermission(status === 'granted');\n        })();\n    }, []);\n\n    let priceHashMap = new Map([\n        ['047400672130','$8.29']\n    ]);\n\n    let nameHashMap = new Map([\n        ['047400672130','Gillette Sensor3 Disposable Razor']\n    ]);\n\n    let productHashMap = new Map([\n        ['047400672130', {\n            \"name\": \"Gillette Sensor3 Dispozable Razor\",\n            \"price\": \"8.29\"\n        }],\n        ['819039021098', {\n            \"name\": \"Tile Mate + Slim (2020) 4-pack (2 Mates, 2 Slims)\",\n            \"price\": \"49.99\"\n        }],\n        ['049022517431', {\n            \"name\": \"Nice! Spring Water - 1L\",\n            \"price\": \"3.99\"\n        }],\n        ['876063006521', {\n            \"name\": \"Muscle Milk Chocolate Protein Shake\",\n            \"price\": \"3.29\"\n        }],\n        ['07199840', {\n            \"name\": \"Coors Light - 12 fl oz\",\n            \"price\": \"1.00\"\n        }],\n        ['096619321063', {\n            \"name\": \"Kirkland Extra Fancy Mixed Nuts - 40 oz\",\n            \"price\": \"8.40\"\n        }],\n        ['073854008089', {\n            \"name\": \"Bicycle Standard Playing Cards - 2pk\",\n            \"price\": \"7.99\"\n        }]\n    ])\n\n    const storeData = async (key, value) => {\n      try {\n        value.quantity = 1;\n        const jsonValue = JSON.stringify(value)\n        await AsyncStorage.setItem(key, jsonValue)\n      } catch (e) {\n        // saving error\n        alert('Something went wrong saving your cart, please try again!');\n      }\n    }\n\n\n    const getData = async (key) => {\n      try {\n        const jsonValue = await AsyncStorage.getItem(key)\n        console.log(jsonValue != null ? JSON.parse(jsonValue) : null)\n        return jsonValue != null ? JSON.parse(jsonValue) : null;\n      } catch(e) {\n        // error reading value\n        alert('Something went wrong reading your cart, please restart the app !');\n      }\n    }\n\n    \n    const handleBarCodeScanned = ({ type, data }) => {\n        setScanned(true);\n        setTimeout(() => {\n            setScanned(false);\n          }, 5000)\n        var barcode = data.toString()\n\n\n        //hacky fix for weird scanning on iPhones\n        if (Device.brand == \"Apple\") {\n            barcode = barcode.substr(1)\n        }\n        \n        if (productHashMap.has(barcode)) {\n            alert(`${productHashMap.get(barcode).name} has been scanned and has a price of ${productHashMap.get(barcode).price}!`);\n            storeData(barcode, productHashMap.get(barcode))\n            getData(barcode)\n        } else {\n            alert('The item\\'s barcode (' + barcode + ') did not match any products in our system.')\n        }\n    };\n    if (hasPermission === null) {\n        return <Text>Requesting for camera permission</Text>;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n\n    return (\n        \n        <View style={styles.container}>\n            <BarCodeScanner\n                onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n                style={StyleSheet.absoluteFillObject}\n            />\n            \n            <View style={{justifyContent: 'center', alignItems: 'center', zIndex: 100}}>\n                <LottieView\n                style={styles.scan}\n                source = {require(\"../../assets/16589-qrcode-scanner.json\")}\n                autoPlay = {true}\n                loop = {true}\n                />\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    scan: {\n        //alignItems: 'center',\n        // width:300,\n        // height:300,\n        // paddingTop:110,\n        // paddingLeft:40\n      },\n    container: {\n        flex: 1,\n    },\n    toptext: {\n        alignItems: \"center\",\n        top: 30,\n\n    },\n    \n});"]},"metadata":{},"sourceType":"module"}