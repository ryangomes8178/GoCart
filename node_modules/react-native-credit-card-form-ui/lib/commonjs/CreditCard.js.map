{"version":3,"sources":["CreditCard.tsx"],"names":["validationSchema","yup","object","shape","holder","string","defined","test","holderName","runtime","options","context","isPotentiallyValid","isValid","cardValidator","cardholderName","number","cardNumber","expiration","expirationDate","cvv","Images","chip","require","brands","default","visa","icons","rotate","defaultCardConfig","numberMask","cvvMask","brandImage","brandName","CreditCard","React","forwardRef","placeholders","labels","background","textColor","errorTextColor","placeholderTextColor","initialValues","expirationDateFormat","onValidStateChange","ref","cardData","setCardData","useState","activeSide","setActiveSide","CardSideEnum","FRONT","cardConfig","setCardConfig","errors","setErrors","frontOpacityRef","useRef","Animated","Value","current","backOpacityRef","rotationValue","numberInputRef","holderInputRef","expirationInputRef","cvvInputRef","cardDataIsValid","textStyle","color","useCallback","fadeAnimationConfig","appearing","toValue","duration","useNativeDriver","rotateAnimationConfig","isAppearing","isFrontActive","parallel","timing","start","newActiveSide","BACK","expirationMask","validateField","name","value","values","response","isPontentiallyValid","error","validateSyncAt","validationError","prev","loadCardConfig","card","type","code","size","gaps","lengths","niceType","brand","maxLength","Math","max","maskChars","padStart","split","i","length","splice","join","handleInputChange","text","focusField","getSideStyle","side","outputRange","transform","scaleX","interpolate","inputRange","opacity","zIndex","field","focus","submit","data","validateSync","abortEarly","err","useEffect","undefined","validationErrors","useImperativeHandle","Keyboard","dismiss","styles","cardWrapper","header","textData","imageChip","textCardNumber","mask","footer","holderWrapper","textLabel","expirationWrapper","strip","cvvWrapper","defaultProps","StyleSheet","create","height","maxHeight","position","width","maxWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderRadius","justifyContent","alignItems","resizeMode","flexDirection","marginBottom","fontSize","PixelRatio","getFontScale","textTransform","fontWeight","marginTop","letterSpacing","backgroundColor","left","right","bottom","flex","marginRight"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable global-require */\nimport * as React from 'react';\nimport * as yup from 'yup';\n\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  Animated,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Keyboard,\n  PixelRatio,\n} from 'react-native';\n\n// import CreditCardType from 'credit-card-type';\nimport cardValidator from 'card-validator';\nimport * as Animatable from 'react-native-animatable';\n\nimport CardSide, { CardSideEnum } from './CardSide';\nimport CardInput from './CardInput';\n\nconst validationSchema = yup.object().shape({\n  holder: yup\n    .string()\n    .defined()\n    .test('is-valid-holder', 'Holder name is invalid', function (\n      holderName: any\n    ) {\n      const { runtime = false } = this.options.context as any;\n      const { isPotentiallyValid, isValid } = cardValidator.cardholderName(\n        holderName\n      );\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  number: yup\n    .string()\n    .defined()\n    .test('is-valid-card-number', 'Card number is invalid', function (\n      cardNumber: any\n    ) {\n      const { runtime = false } = this.options.context as any;\n      const { isPotentiallyValid, isValid } = cardValidator.number(cardNumber);\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  expiration: yup\n    .string()\n    .defined()\n    .test('is-valid-expiration', 'Card expiration is invalid', function (\n      expiration: any\n    ) {\n      const { runtime = false } = this.options.context as any;\n      const { isPotentiallyValid, isValid } = cardValidator.expirationDate(\n        expiration\n      );\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  cvv: yup\n    .string()\n    .defined()\n    .test('is-valid-cvv', 'Card CVV is invalid', function (cvv: any) {\n      const { runtime = false } = this.options.context as any;\n      const { isPotentiallyValid, isValid } = cardValidator.cvv(cvv);\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n});\n\nconst Images: any = {\n  chip: require('./images/chip.png'),\n  brands: {\n    default: '',\n    visa: require('./images/brands/visa.png'),\n  },\n  icons: {\n    rotate: require('./images/icons/rotate.png'),\n  },\n};\n\nexport type CreditCardType = {\n  submit: () => void;\n};\n\ninterface CardData {\n  number?: string;\n  holder?: string;\n  expiration?: string;\n  cvv?: string;\n  brand?: string;\n}\n\ninterface CreditCardProps {\n  placeholders?: {\n    number?: string;\n    holder?: string;\n    expiration?: string;\n    cvv?: string;\n  };\n  labels?: {\n    holder?: string;\n    expiration?: string;\n    cvv?: string;\n  };\n  expirationDateFormat?: 'MM/YYYY' | 'MM/YY';\n  initialValues?: CardData;\n  background?: string | any;\n  textColor?: string;\n  placeholderTextColor?: string;\n  errorTextColor?: string;\n  onValidStateChange?: (cardDataIsValid: boolean) => void;\n}\n\nexport interface SubmitResponse {\n  error: yup.ValidationError | null;\n  data: CardData;\n}\n\nconst defaultCardConfig = {\n  numberMask: '9999 9999 9999 9999',\n  cvvMask: '999',\n  brandImage: Images.brands.default,\n  brandName: '',\n};\n\nconst CreditCard = React.forwardRef<CreditCardType, CreditCardProps>(\n  (\n    {\n      placeholders,\n      labels,\n      background,\n      textColor,\n      errorTextColor,\n      placeholderTextColor,\n      initialValues,\n      expirationDateFormat,\n      onValidStateChange,\n    }: any,\n    ref\n  ) => {\n    /** States */\n    const [cardData, setCardData] = React.useState(initialValues);\n    const [activeSide, setActiveSide] = React.useState(CardSideEnum.FRONT);\n    const [cardConfig, setCardConfig] = React.useState(defaultCardConfig);\n    const [errors, setErrors] = React.useState({\n      number: false,\n      holder: false,\n      expiration: false,\n      cvv: false,\n    });\n\n    /** Animations Refs */\n    const frontOpacityRef = React.useRef(new Animated.Value(1)).current;\n    const backOpacityRef = React.useRef(new Animated.Value(0)).current;\n    const rotationValue = React.useRef(new Animated.Value(0)).current;\n\n    /** Input Refs */\n    const numberInputRef = React.useRef(null);\n    const holderInputRef = React.useRef(null);\n    const expirationInputRef = React.useRef(null);\n    const cvvInputRef = React.useRef(null);\n\n    /** Other refs */\n    const cardDataIsValid = React.useRef(false);\n\n    /** Runtime Styles */\n    const textStyle = { color: textColor };\n\n    /** Animate Card (Rotate) */\n    const rotate = React.useCallback(() => {\n      const fadeAnimationConfig = (appearing: boolean) => ({\n        toValue: appearing ? 1 : 0,\n        duration: 200,\n        useNativeDriver: true,\n      });\n\n      const rotateAnimationConfig = (isAppearing: boolean) => ({\n        toValue: isAppearing ? 1 : 0,\n        duration: 400,\n        useNativeDriver: true,\n      });\n\n      const isFrontActive = activeSide === CardSideEnum.FRONT;\n      Animated.parallel([\n        Animated.timing(frontOpacityRef, fadeAnimationConfig(!isFrontActive)),\n        Animated.timing(backOpacityRef, fadeAnimationConfig(isFrontActive)),\n        Animated.timing(rotationValue, rotateAnimationConfig(isFrontActive)),\n      ]).start(() => {\n        const newActiveSide = isFrontActive\n          ? CardSideEnum.BACK\n          : CardSideEnum.FRONT;\n        setActiveSide(newActiveSide);\n      });\n    }, [activeSide, backOpacityRef, frontOpacityRef, rotationValue]);\n\n    const expirationMask =\n      expirationDateFormat === 'MM/YY' ? '99/99' : '99/9999';\n\n    const validateField = React.useCallback((name: string, value: any) => {\n      const values: any = { [name]: value };\n      const response = {\n        isPontentiallyValid: false,\n        isValid: false,\n        error: null,\n      };\n\n      try {\n        // Check potentially invalid... If has error, it is throwed...\n        validationSchema.validateSyncAt(name, values, {\n          context: { runtime: true },\n        });\n        response.isPontentiallyValid = true;\n\n        // Check if is valid... If has error, it is throwed...\n        validationSchema.validateSyncAt(name, values, {\n          context: { runtime: false },\n        });\n        response.isValid = true;\n      } catch (validationError) {\n        setErrors((prev) => ({\n          ...prev,\n          [name]: response.isPontentiallyValid ? false : validationError,\n        }));\n      }\n\n      return response;\n    }, []);\n\n    const loadCardConfig = (cardNumber: string) => {\n      const { card = null } = cardValidator.number(cardNumber);\n      if (!card) {\n        setCardConfig({ ...defaultCardConfig });\n        return;\n      }\n\n      const {\n        type = '',\n        code = { size: 0 },\n        gaps = [],\n        lengths = [],\n        niceType = '',\n      } = card;\n\n      setCardData((prev: any) => ({\n        ...prev,\n        brand: type,\n      }));\n\n      setCardConfig((prev: any) => {\n        const maxLength = Math.max(...lengths);\n        const maskChars = ''.padStart(maxLength, '9').split('');\n        for (let i = 0; i < gaps.length; i += 1) {\n          maskChars.splice(gaps[i] + i, 0, ' ');\n        }\n        const numberMask = maskChars.join('');\n\n        const cvvMask = ''.padStart(code.size, '9');\n        const brandImage = Images.brands[type]\n          ? Images.brands[type]\n          : Images.brands.default;\n\n        return {\n          ...prev,\n          numberMask,\n          cvvMask,\n          brandImage,\n          brandName: niceType,\n        };\n      });\n    };\n\n    const handleInputChange = React.useCallback(\n      (name, text) => {\n        setCardData((prev: any) => ({ ...prev, [name]: text }));\n        const { isValid } = validateField(name, text);\n\n        if (name === 'number') {\n          loadCardConfig(text);\n          if (isValid) {\n            focusField(holderInputRef);\n          }\n        } else if (\n          name === 'expiration' &&\n          isValid &&\n          text.length === expirationMask.length\n        ) {\n          focusField(cvvInputRef);\n          rotate();\n        }\n      },\n      [validateField, rotate, expirationMask]\n    );\n\n    const getSideStyle = React.useCallback(\n      (side) => {\n        const outputRange = side === CardSideEnum.FRONT ? [1, -1] : [-1, 1];\n\n        return {\n          transform: [\n            {\n              scaleX: rotationValue.interpolate({\n                inputRange: [0, 1],\n                outputRange,\n              }),\n            },\n          ],\n          opacity:\n            side === CardSideEnum.FRONT ? frontOpacityRef : backOpacityRef,\n          zIndex: side === activeSide ? 1 : 0,\n        };\n      },\n      [activeSide, backOpacityRef, frontOpacityRef, rotationValue]\n    );\n\n    const focusField = (field: any) => {\n      if (!field || !field.current) return;\n      field.current.focus();\n    };\n\n    const submit = React.useCallback(() => {\n      const response: SubmitResponse = {\n        error: null,\n        data: cardData,\n      };\n      try {\n        validationSchema.validateSync(cardData, {\n          context: { runtime: false },\n          abortEarly: false,\n        });\n      } catch (err) {\n        response.error = err;\n      }\n      return response;\n    }, [cardData]);\n\n    React.useEffect(() => {\n      if (cardDataIsValid.current !== undefined) {\n        try {\n          validationSchema.validateSync(cardData, {\n            context: { runtime: false },\n          });\n          onValidStateChange(true);\n        } catch (validationErrors) {\n          onValidStateChange(false, validationErrors);\n        }\n      }\n    }, [cardData, onValidStateChange]);\n\n    React.useImperativeHandle(ref, () => ({ submit }));\n\n    return (\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <View style={styles.cardWrapper}>\n          <CardSide\n            background={background}\n            style={[[getSideStyle(CardSideEnum.FRONT)]]}\n          >\n            <View style={styles.header}>\n              <TouchableOpacity onPress={rotate}>\n                <Image source={Images.icons.rotate} />\n              </TouchableOpacity>\n\n              {!!cardConfig.brandImage && (\n                <Animatable.Image\n                  source={cardConfig.brandImage}\n                  animation=\"slideInRight\"\n                  duration={400}\n                  useNativeDriver\n                />\n              )}\n              {!!(!cardConfig.brandImage && cardConfig.brandName) && (\n                <Animatable.Text\n                  style={[styles.textData, textStyle]}\n                  animation=\"slideInRight\"\n                  duration={400}\n                >\n                  {cardConfig.brandName}\n                </Animatable.Text>\n              )}\n            </View>\n\n            <Image source={Images.chip} style={styles.imageChip} />\n\n            <View>\n              <CardInput\n                placeholderTextColor={placeholderTextColor}\n                name=\"number\"\n                onChange={handleInputChange}\n                value={cardData?.number}\n                autoFocus\n                placeholder={placeholders.number}\n                style={[\n                  styles.textCardNumber,\n                  { color: errors.number ? errorTextColor : textColor },\n                ]}\n                maxLength={cardConfig.numberMask.length}\n                autocompleteType=\"cc-number\"\n                textContentType=\"creditCardNumber\"\n                maskProps={{\n                  type: 'custom',\n                  options: { mask: cardConfig.numberMask },\n                }}\n                refInput={numberInputRef}\n                returnKeyType=\"next\"\n                autoCorrect={false}\n                onSubmitEditing={() => focusField(holderInputRef)}\n                blurOnSubmit={false}\n              />\n            </View>\n\n            <View style={styles.footer}>\n              <View style={styles.holderWrapper}>\n                <Text style={[styles.textLabel, textStyle]}>\n                  {labels.holder}\n                </Text>\n                <CardInput\n                  placeholderTextColor={placeholderTextColor}\n                  name=\"holder\"\n                  autocompleteType=\"name\"\n                  textContentType=\"name\"\n                  returnKeyType=\"next\"\n                  onChange={handleInputChange}\n                  placeholder={placeholders.holder}\n                  autoCapitalize=\"characters\"\n                  style={[\n                    styles.textData,\n                    { color: errors.holder ? errorTextColor : textColor },\n                  ]}\n                  value={cardData?.holder}\n                  refInput={holderInputRef}\n                  onSubmitEditing={() => focusField(expirationInputRef)}\n                  blurOnSubmit={false}\n                />\n              </View>\n              <View style={styles.expirationWrapper}>\n                <Text style={[styles.textLabel, textStyle]}>\n                  {labels.expiration}\n                </Text>\n                <CardInput\n                  placeholderTextColor={placeholderTextColor}\n                  name=\"expiration\"\n                  autocompleteType=\"cc-exp\"\n                  keyboardType=\"numbers-and-punctuation\"\n                  returnKeyType=\"next\"\n                  onChange={handleInputChange}\n                  placeholder={placeholders.expiration}\n                  style={[\n                    styles.textData,\n                    {\n                      color:\n                        errors.expiration &&\n                        cardData.expiration.length === expirationMask.length\n                          ? errorTextColor\n                          : textColor,\n                    },\n                  ]}\n                  value={cardData?.expiration}\n                  maxLength={7}\n                  maskProps={{\n                    type: 'custom',\n                    options: { mask: expirationMask },\n                  }}\n                  refInput={expirationInputRef}\n                  onSubmitEditing={() => {\n                    focusField(cvvInputRef);\n                    rotate();\n                  }}\n                  blurOnSubmit={false}\n                />\n              </View>\n            </View>\n          </CardSide>\n\n          <CardSide\n            style={[getSideStyle(CardSideEnum.BACK)]}\n            background={background}\n          >\n            <View style={styles.strip} />\n            <TouchableOpacity onPress={rotate}>\n              <Image source={Images.icons.rotate} />\n            </TouchableOpacity>\n            <View style={styles.cvvWrapper} pointerEvents=\"box-none\">\n              <Text style={[styles.textLabel, textStyle]}>{labels.cvv}</Text>\n              <CardInput\n                placeholderTextColor={placeholderTextColor}\n                name=\"cvv\"\n                autocompleteType=\"cc-csc\"\n                keyboardType=\"numeric\"\n                returnKeyType=\"done\"\n                onChange={handleInputChange}\n                placeholder={placeholders.cvv}\n                style={[\n                  styles.textData,\n                  { color: errors.cvv ? errorTextColor : textColor },\n                ]}\n                value={cardData?.cvv}\n                maxLength={cardConfig.cvvMask.length}\n                maskProps={{\n                  type: 'custom',\n                  options: { mask: cardConfig.cvvMask },\n                }}\n                onBlur={rotate}\n                refInput={cvvInputRef}\n              />\n            </View>\n          </CardSide>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n);\n\nCreditCard.defaultProps = {\n  placeholders: {\n    number: '0000 0000 0000 0000',\n    holder: 'TITULAR DO CARTÃO',\n    expiration: 'MM/YYYY',\n    cvv: '000',\n  },\n  labels: {\n    holder: 'TITULAR DO CARTÃO',\n    expiration: 'VENCIMENTO',\n    cvv: 'CÓD. SEGURANÇA',\n  },\n  expirationDateFormat: 'MM/YYYY',\n  textColor: '#FFFFFF',\n  placeholderTextColor: '#9B84A9',\n  initialValues: {\n    number: '',\n    holder: '',\n    expiration: '',\n    cvv: '',\n    brand: '',\n  },\n  errorTextColor: '#F15A5B',\n  onValidStateChange: () => {},\n};\n\nconst styles = StyleSheet.create({\n  cardWrapper: {\n    height: '100%',\n    maxHeight: 220,\n    position: 'relative',\n    width: '100%',\n    maxWidth: 350,\n    shadowColor: 'rgba(0,0,0,0.6)',\n    shadowOffset: {\n      width: 0,\n      height: 6,\n    },\n    shadowOpacity: 0.37,\n    shadowRadius: 7.49,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  background: {\n    resizeMode: 'cover',\n    width: '100%',\n    height: '100%',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  textLabel: {\n    fontSize: 10 / PixelRatio.getFontScale(),\n    textTransform: 'uppercase',\n  },\n  textData: {\n    fontWeight: 'bold',\n    fontSize: 16 / PixelRatio.getFontScale(),\n  },\n  textCardNumber: {\n    fontSize: 20 / PixelRatio.getFontScale(),\n    fontWeight: 'bold',\n    marginBottom: 8,\n    marginTop: 16,\n    letterSpacing: 2,\n  },\n  imageChip: {\n    marginTop: 16,\n  },\n  footer: {\n    marginTop: 16,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  strip: {\n    backgroundColor: 'rgba(0,0,0,.6)',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    marginTop: 48,\n    height: 40,\n  },\n  cvvWrapper: {\n    height: '100%',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    bottom: 24,\n  },\n  holderWrapper: {\n    flex: 2,\n    marginRight: 16,\n  },\n  expirationWrapper: {\n    flex: 1,\n    alignItems: 'flex-end',\n  },\n});\n\nexport default CreditCard;\n"]}