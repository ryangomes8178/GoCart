{"ast":null,"code":"export var isEmpty = function isEmpty(x) {\n  if (typeof x === typeof \"\") {\n    x = x.replace(/\\s/g, \"\");\n    return x === \"\";\n  }\n\n  if (!x) return true;\n  if (x === {}) return true;\n  if (x === []) return true;\n  if (x == null) return true;\n  if (typeof x === \"undefined\") return true;\n  if (x === \"\") return true;\n  if (x === function () {}) return true;\n\n  if (typeof x === typeof {}) {\n    if (Object.entries(x).length === 0 && x.constructor === Object) {\n      return true;\n    }\n\n    for (var key in x) {\n      if (x.hasOwnProperty(key) && !isEmpty(x[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n};\nexport var parseColor = function parseColor(color) {\n  var colors;\n  var colorString = color.replace(/\\s/g, \"\");\n\n  if (colors = /#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(colorString)) {\n    colors = [parseInt(colors[1], 16), parseInt(colors[2], 16), parseInt(colors[3], 16), parseInt(colors[4], 16)];\n  } else if (colors = /#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(colorString)) {\n    colors = [parseInt(colors[1], 16), parseInt(colors[2], 16), parseInt(colors[3], 16)];\n  } else if (colors = /#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(colorString)) {\n    colors = [parseInt(colors[1], 16) * 17, parseInt(colors[2], 16) * 17, parseInt(colors[3], 16) * 17];\n  } else if (colors = /rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(colorString)) {\n    colors = [+colors[1], +colors[2], +colors[3], +colors[4]];\n  } else if (colors = /rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(colorString)) {\n    colors = [+colors[1], +colors[2], +colors[3]];\n  } else {\n    colors = [0, 0, 0, 0];\n  }\n\n  if (isNaN(colors[3])) {\n    colors[3] = 255;\n  }\n\n  return colors;\n};\nexport var colorsToHex = function colorsToHex(colors) {\n  var hexColors = colors.map(function (color) {\n    color = color.toString(16);\n\n    while (color.length < 2) {\n      color += \"0\";\n    }\n\n    return color;\n  });\n  return \"#\" + hexColors.join(\"\");\n};\nexport var isTransparentColor = function isTransparentColor(color) {\n  color = String(color).toLowerCase().trim();\n  var parse = parseColor(color);\n  return String(color).toLowerCase().trim() === \"transparent\" || parse[4] === 0;\n};\nexport var isCallable = function isCallable(callback) {\n  return callback != null && (callback instanceof Function || typeof callback === \"function\");\n};\nexport var debounce = function debounce(callback, wait) {\n  var timeout;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var context = this;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return callback.apply(context, args);\n    }, wait);\n    return timeout;\n  };\n};\nexport var isNumeric = function isNumeric(num) {\n  return num != null && num !== false && num !== \"\" && !isNaN(parseFloat(num)) && !isNaN(num - 0);\n};\nexport var mergeViewStyle = function mergeViewStyle(style, defaultStyle) {\n  if (style == null) {\n    style = defaultStyle;\n  } else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n    defaultStyle.concat(style);\n    style = defaultStyle;\n  } else if (Array.isArray(defaultStyle)) {\n    defaultStyle.push(style);\n    style = defaultStyle;\n  } else if (Array.isArray(style)) {\n    style.unshift(defaultStyle);\n  } else {\n    style = [defaultStyle, style];\n  }\n\n  return style;\n};\nexport var getColorContrast = function getColorContrast(hexcolor) {\n  if (hexcolor.slice(0, 1) === \"#\") {\n    hexcolor = hexcolor.slice(1);\n  }\n\n  if (hexcolor.length === 3) {\n    hexcolor = hexcolor.split(\"\").map(function (hex) {\n      return hex + hex;\n    }).join(\"\");\n  }\n\n  var r = parseInt(hexcolor.substr(0, 2), 16);\n  var g = parseInt(hexcolor.substr(2, 2), 16);\n  var b = parseInt(hexcolor.substr(4, 2), 16);\n  var yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  return yiq >= 170 ? \"#000000\" : \"#FFFFFF\";\n};","map":{"version":3,"sources":["/Users/raj/Desktop/skrt/node_modules/react-native-input-spinner/src/Utils.js"],"names":["isEmpty","x","replace","Object","entries","length","constructor","key","hasOwnProperty","parseColor","color","colors","colorString","exec","parseInt","isNaN","colorsToHex","hexColors","map","toString","join","isTransparentColor","String","toLowerCase","trim","parse","isCallable","callback","Function","debounce","wait","timeout","args","context","clearTimeout","setTimeout","apply","isNumeric","num","parseFloat","mergeViewStyle","style","defaultStyle","Array","isArray","concat","push","unshift","getColorContrast","hexcolor","slice","split","hex","r","substr","g","b","yiq"],"mappings":"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","sourcesContent":["/**\n * Is empty\n * @param x\n * @returns {boolean}\n */\nexport const isEmpty = (x) => {\n\tif (typeof x === typeof \"\") {\n\t\tx = x.replace(/\\s/g, \"\");\n\t\treturn x === \"\";\n\t}\n\n\tif (!x) return true;\n\tif (x === {}) return true;\n\tif (x === []) return true;\n\tif (x == null) return true;\n\tif (typeof x === \"undefined\") return true;\n\tif (x === \"\") return true;\n\tif (x === function () {}) return true;\n\n\tif (typeof x === typeof {}) {\n\t\tif (Object.entries(x).length === 0 && x.constructor === Object) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (let key in x) {\n\t\t\tif (x.hasOwnProperty(key) && !isEmpty(x[key])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n/**\n * Parse color.\n * @param color\n * @returns {number[]}\n */\nexport const parseColor = (color) => {\n\tlet colors;\n\tconst colorString = color.replace(/\\s/g, \"\");\n\tif (\n\t\t(colors = /#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(\n\t\t\tcolorString,\n\t\t))\n\t) {\n\t\t// #000000FF\n\t\tcolors = [\n\t\t\tparseInt(colors[1], 16),\n\t\t\tparseInt(colors[2], 16),\n\t\t\tparseInt(colors[3], 16),\n\t\t\tparseInt(colors[4], 16),\n\t\t];\n\t} else if (\n\t\t(colors = /#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(\n\t\t\tcolorString,\n\t\t))\n\t) {\n\t\t// #000000\n\t\tcolors = [\n\t\t\tparseInt(colors[1], 16),\n\t\t\tparseInt(colors[2], 16),\n\t\t\tparseInt(colors[3], 16),\n\t\t];\n\t} else if (\n\t\t(colors = /#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(colorString))\n\t) {\n\t\t// #000\n\t\tcolors = [\n\t\t\tparseInt(colors[1], 16) * 17,\n\t\t\tparseInt(colors[2], 16) * 17,\n\t\t\tparseInt(colors[3], 16) * 17,\n\t\t];\n\t} else if (\n\t\t(colors = /rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(\n\t\t\tcolorString,\n\t\t))\n\t) {\n\t\t// rgba(255,255,255,255)\n\t\tcolors = [+colors[1], +colors[2], +colors[3], +colors[4]];\n\t} else if ((colors = /rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(colorString))) {\n\t\t// rgb(255,255,255)\n\t\tcolors = [+colors[1], +colors[2], +colors[3]];\n\t} else {\n\t\tcolors = [0, 0, 0, 0];\n\t}\n\n\t// Add alpha if missing\n\tif (isNaN(colors[3])) {\n\t\tcolors[3] = 255;\n\t}\n\n\treturn colors;\n};\n\n/**\n * Parsed colors to hex code\n * @param colors\n * @returns {string}\n */\nexport const colorsToHex = (colors) => {\n\tconst hexColors = colors.map((color) => {\n\t\tcolor = color.toString(16);\n\t\twhile (color.length < 2) {\n\t\t\tcolor += \"0\";\n\t\t}\n\t\treturn color;\n\t});\n\n\treturn \"#\" + hexColors.join(\"\");\n};\n\n/**\n * Is transparent color\n * @private\n * @param color\n * @returns {boolean}\n */\nexport const isTransparentColor = (color) => {\n\tcolor = String(color).toLowerCase().trim();\n\tconst parse = parseColor(color);\n\treturn String(color).toLowerCase().trim() === \"transparent\" || parse[4] === 0;\n};\n\n/**\n * Is variable callable\n * @private\n * @param callback\n * @returns {boolean}\n */\nexport const isCallable = (callback) => {\n\treturn (\n\t\tcallback != null &&\n\t\t(callback instanceof Function || typeof callback === \"function\")\n\t);\n};\n\n/**\n * Debounce\n * @param callback\n * @param wait\n * @returns {function(...[*]=): void}\n */\nexport const debounce = (callback, wait) => {\n\tlet timeout;\n\treturn function (...args) {\n\t\tconst context = this;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(() => callback.apply(context, args), wait);\n\t\treturn timeout;\n\t};\n};\n\n/**\n * Detect if is a numeric value\n * @param num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n\treturn (\n\t\tnum != null &&\n\t\tnum !== false &&\n\t\tnum !== \"\" &&\n\t\t!isNaN(parseFloat(num)) &&\n\t\t!isNaN(num - 0)\n\t);\n};\n\n/**\n * Merge styles\n * @param style\n * @param defaultStyle\n * @returns {*[]}\n */\nexport const mergeViewStyle = (style, defaultStyle) => {\n\tif (style == null) {\n\t\tstyle = defaultStyle;\n\t} else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n\t\tdefaultStyle.concat(style);\n\t\tstyle = defaultStyle;\n\t} else if (Array.isArray(defaultStyle)) {\n\t\tdefaultStyle.push(style);\n\t\tstyle = defaultStyle;\n\t} else if (Array.isArray(style)) {\n\t\tstyle.unshift(defaultStyle);\n\t} else {\n\t\tstyle = [defaultStyle, style];\n\t}\n\treturn style;\n};\n\n/**\n * Get color contrast\n * @param hexcolor\n * @returns {string}\n */\nexport const getColorContrast = (hexcolor) => {\n\tif (hexcolor.slice(0, 1) === \"#\") {\n\t\thexcolor = hexcolor.slice(1);\n\t}\n\tif (hexcolor.length === 3) {\n\t\thexcolor = hexcolor\n\t\t\t.split(\"\")\n\t\t\t.map(function (hex) {\n\t\t\t\treturn hex + hex;\n\t\t\t})\n\t\t\t.join(\"\");\n\t}\n\tvar r = parseInt(hexcolor.substr(0, 2), 16);\n\tvar g = parseInt(hexcolor.substr(2, 2), 16);\n\tvar b = parseInt(hexcolor.substr(4, 2), 16);\n\tvar yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\treturn yiq >= 170 ? \"#000000\" : \"#FFFFFF\";\n};\n"]},"metadata":{},"sourceType":"module"}