{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/raj/Desktop/skrt/src/pages/SignInPage.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CryptoES from \"crypto-es\";\nimport request from \"request\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var testAPICall = function testAPICall() {\n    var http_method = 'get';\n    var url_path = '/v1/data/countries';\n    var salt = CryptoES.lib.WordArray.random(12);\n    var timestamp = (Math.floor(new Date().getTime() / 1000) - 10).toString();\n    var access_key = '8E34CFD95D661EF7946E';\n    var secret_key = '5001ae0c57b14924dc361c69d2873c93246f9a22e26168ec514dfcaaa35e853bcd9c72c28dbca3c7';\n    console.log(\"hello\");\n    var body = '';\n    request.data = \"\";\n\n    if (JSON.stringify(request.data) !== '{}' && request.data !== '') {\n      body = JSON.stringify(JSON.parse(request.data));\n    }\n\n    var to_sign = http_method + url_path + salt + timestamp + access_key + secret_key + body;\n    var signature = CryptoES.enc.Hex.stringify(CryptoES.HmacSHA256(to_sign, secret_key));\n    signature = CryptoES.enc.Base64.stringify(CryptoES.enc.Utf8.parse(signature));\n    var options = {\n      'method': 'GET',\n      'url': 'https://sandboxapi.rapyd.net/v1/data/countries',\n      'headers': {\n        'Content-Type': 'application/json',\n        'access_key': access_key,\n        'salt': salt,\n        'timestamp': timestamp,\n        'signature': signature\n      }\n    };\n    request(options, function (error, response) {\n      if (error) throw new Error(error);\n      console.log(response.body);\n    });\n    console.log(signature);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../../assets/log2.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#003f5c\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot_button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Forgot Password?\")), React.createElement(Button, {\n    onPress: testAPICall,\n    title: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"LOGIN\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    marginBottom: 30,\n    width: \"75%\",\n    height: \"30%\"\n  },\n  inputView: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    alignItems: \"center\"\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#FF1493\"\n  }\n});","map":{"version":3,"sources":["/Users/raj/Desktop/skrt/src/pages/SignInPage.js"],"names":["StatusBar","React","useState","CryptoES","request","App","email","setEmail","password","setPassword","testAPICall","http_method","url_path","salt","lib","WordArray","random","timestamp","Math","floor","Date","getTime","toString","access_key","secret_key","console","log","body","data","JSON","stringify","parse","to_sign","signature","enc","Hex","HmacSHA256","Base64","Utf8","options","error","response","Error","styles","container","image","require","inputView","TextInput","forgot_button","loginBtn","loginText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginBottom","width","height","borderRadius","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Button,\n  TouchableOpacity,\n  Alert\n} from \"react-native\";\nimport CryptoES from \"crypto-es\";\nimport request from \"request\";\n \nexport default function App() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n    const testAPICall = () => {\n\n        var http_method = 'get';                // Lower case.\n        var url_path = '/v1/data/countries';    // Portion after the base URL.\n        var salt = CryptoES.lib.WordArray.random(12);  // Randomly generated for each request.\n        var timestamp = (Math.floor(new Date().getTime() / 1000) - 10).toString();\n                                                // Current Unix time.\n        var access_key = '8E34CFD95D661EF7946E';     // The access key received from Rapyd.\n        var secret_key = '5001ae0c57b14924dc361c69d2873c93246f9a22e26168ec514dfcaaa35e853bcd9c72c28dbca3c7';     // Never transmit the secret key by itself.\n        console.log(\"hello\")\n        var body = '';                          // JSON body goes here.\n        request.data = \"\"\n        if (JSON.stringify(request.data) !== '{}' && request.data !== '') {\n            body = JSON.stringify(JSON.parse(request.data));\n        }\n\n        var to_sign = http_method + url_path + salt + timestamp + access_key + secret_key + body;\n\n        var signature = CryptoES.enc.Hex.stringify(CryptoES.HmacSHA256(to_sign, secret_key));\n\n        signature = CryptoES.enc.Base64.stringify(CryptoES.enc.Utf8.parse(signature));\n        var options = {\n          'method': 'GET',\n          'url': 'https://sandboxapi.rapyd.net/v1/data/countries',\n          'headers': {\n            'Content-Type': 'application/json',\n            'access_key': access_key,\n            'salt': salt,\n            'timestamp': timestamp,\n            'signature': signature\n          }\n        };\n        request(options, function (error, response) {\n          if (error) throw new Error(error);\n          console.log(response.body);\n        });\n\n        console.log(signature)\n\n\n    }\n\n\n \n  return (\n    <View style={styles.container}>\n      <Image style={styles.image} source={require(\"../../assets/log2.png\")} />\n \n      <StatusBar style=\"auto\" />\n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Email\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(email) => setEmail(email)}\n        />\n      </View>\n \n      <View style={styles.inputView}>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Password\"\n          placeholderTextColor=\"#003f5c\"\n          secureTextEntry={true}\n          onChangeText={(password) => setPassword(password)}\n        />\n      </View>\n \n      <TouchableOpacity>\n        <Text style={styles.forgot_button}>Forgot Password?</Text>\n      </TouchableOpacity>\n \n      <Button \n      onPress={testAPICall}\n      title=\"Login\">\n      <TouchableOpacity style={styles.loginBtn}>\n        <Text style={styles.loginText}>LOGIN</Text>\n        \n      </TouchableOpacity>\n      </Button>\n    </View>\n  );\n}\n \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n \n  image: {\n    marginBottom: 30,\n    width: \"75%\",\n    height: \"30%\",\n  },\n \n  inputView: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\",\n  },\n \n  TextInput: {\n    height: 50,\n    flex: 1,\n    alignItems: \"center\",\n  },\n \n  forgot_button: {\n    height: 30,\n    marginBottom: 30,\n  },\n \n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#FF1493\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}